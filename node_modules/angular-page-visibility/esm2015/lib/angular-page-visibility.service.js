import { __decorate, __metadata } from "tslib";
import { Injectable } from "@angular/core";
import { Subject } from "rxjs";
import { AngularPageVisibilityStateEnum } from "./angular-page-visibility.state.enum";
import * as i0 from "@angular/core";
class HiddenKeyConstant {
}
HiddenKeyConstant.DEFAULT = "hidden";
HiddenKeyConstant.MS = "msHidden";
HiddenKeyConstant.WEB_KIT = "webkitHidden";
class VisibilityStatusConstant {
}
VisibilityStatusConstant.VISIBLE = "visible";
VisibilityStatusConstant.HIDDEN = "hidden";
VisibilityStatusConstant.PRERENDER = "prerender";
VisibilityStatusConstant.UNLOADED = "unloaded";
let AngularPageVisibilityService = class AngularPageVisibilityService {
    constructor() {
        this.onPageVisibleSource = new Subject();
        this.onPageHiddenSource = new Subject();
        this.onPagePrerenderSource = new Subject();
        this.onPageUnloadedSource = new Subject();
        this.onPageVisibilityChangeSource = new Subject();
        this.$onPageVisible = this.onPageVisibleSource.asObservable();
        this.$onPageHidden = this.onPageHiddenSource.asObservable();
        this.$onPagePrerender = this.onPagePrerenderSource.asObservable();
        this.$onPageUnloaded = this.onPageUnloadedSource.asObservable();
        this.$onPageVisibilityChange = this.onPageVisibilityChangeSource.asObservable();
        this.addEventListenerVibilityChange();
    }
    isPageVisible() {
        return (VisibilityStatusConstant.VISIBLE === this.getVisibilityState() ||
            !this.isHidden());
    }
    isPageHidden() {
        return (VisibilityStatusConstant.HIDDEN === this.getVisibilityState() ||
            this.isHidden());
    }
    isPagePrerender() {
        return VisibilityStatusConstant.PRERENDER === this.getVisibilityState();
    }
    isPageUnloaded() {
        return VisibilityStatusConstant.UNLOADED === this.getVisibilityState();
    }
    isHidden() {
        return document[this.hidden];
    }
    getVisibilityState() {
        return document[this.visibilityState];
    }
    defineBrowserSupport() {
        if (typeof document[HiddenKeyConstant.DEFAULT] !== "undefined") {
            // Opera 12.10 and Firefox 18 and later support
            this.hidden = HiddenKeyConstant.DEFAULT;
            this.visibilityChange = "visibilitychange";
            this.visibilityState = "visibilityState";
        }
        else if (typeof document[HiddenKeyConstant.MS] !== "undefined") {
            this.hidden = HiddenKeyConstant.MS;
            this.visibilityChange = "msvisibilitychange";
            this.visibilityState = "msVisibilityState";
        }
        else if (typeof document[HiddenKeyConstant.WEB_KIT] !== "undefined") {
            this.hidden = HiddenKeyConstant.WEB_KIT;
            this.visibilityChange = "webkitvisibilitychange";
            this.visibilityState = "webkitVisibilityState";
        }
    }
    addEventListenerVibilityChange() {
        this.defineBrowserSupport();
        document.addEventListener(this.visibilityChange, () => {
            const vibilityState = this.getVisibilityState();
            switch (vibilityState) {
                case VisibilityStatusConstant.VISIBLE:
                    this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.VISIBLE);
                    this.onPageVisibleSource.next();
                    break;
                case VisibilityStatusConstant.HIDDEN:
                    this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.HIDDEN);
                    this.onPageHiddenSource.next();
                    break;
                case VisibilityStatusConstant.PRERENDER:
                    this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.PRERENDER);
                    this.onPagePrerenderSource.next();
                    break;
                case VisibilityStatusConstant.UNLOADED:
                    this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.UNLOADED);
                    this.onPageUnloadedSource.next();
                    break;
                default:
                    if (this.isHidden()) {
                        this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.HIDDEN);
                        this.onPageHiddenSource.next();
                    }
                    else {
                        this.onPageVisibilityChangeSource.next(AngularPageVisibilityStateEnum.VISIBLE);
                        this.onPageVisibleSource.next();
                    }
            }
        }, false);
    }
};
AngularPageVisibilityService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AngularPageVisibilityService_Factory() { return new AngularPageVisibilityService(); }, token: AngularPageVisibilityService, providedIn: "root" });
AngularPageVisibilityService = __decorate([
    Injectable({
        providedIn: "root"
    }),
    __metadata("design:paramtypes", [])
], AngularPageVisibilityService);
export { AngularPageVisibilityService };
//# sourceMappingURL=data:application/json;base64,